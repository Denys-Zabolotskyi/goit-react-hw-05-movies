{"version":3,"file":"static/js/206.b6ec66f1.chunk.js","mappings":"4QAEaA,EAAOC,EAAAA,GAAAA,GAAH,8HAQJC,EAAOD,EAAAA,GAAAA,GAAH,kFAMJE,EAAOF,EAAAA,GAAAA,EAAH,4C,kBC2BjB,EAtCoB,WAClB,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,gHAEOC,EAAAA,EAAAA,IAAmBP,GAF1B,gBAEXQ,EAFW,EAEXA,QACRJ,EAAWI,GAHQ,gDAKnBC,QAAQC,IAAR,MALmB,2GAAH,qDAUpBJ,GACD,GAAE,CAACN,KAGF,8BACGG,GAAWA,EAAQQ,OAAS,GAC3B,SAACf,EAAD,UACGO,EAAQS,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,GAC/B,OACE,UAACjB,EAAD,YACE,UAACC,EAAD,sBAAec,MACf,SAACd,EAAD,UAAOe,MAFEC,EAKd,OAGH,SAAChB,EAAD,yDAIP,C,kMCxCKiB,EAAW,+BACXC,EAAM,mCAECC,EAAgB,mCAAG,+GAELC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,wCACsBC,EADtB,YAFK,uBAEpBG,EAFoB,EAEpBA,KAFoB,kBAKrBA,EAAKZ,SALgB,gCAO5BC,QAAQY,MAAM,wDAPc,yDAAH,qDAWhBC,EAAc,mCAAG,WAAMtB,GAAN,kGAEHmB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAhB,EADA,oBACmBiB,EADnB,YAFG,uBAElBG,EAFkB,EAElBA,KAFkB,kBAKnBA,GALmB,gCAO1BX,QAAQY,MACN,8DARwB,yDAAH,sDAadE,EAAe,mCAAG,WAAMvB,GAAN,kGAEJmB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAhB,EADA,4BAC2BiB,IAHvB,uBAEnBG,EAFmB,EAEnBA,KAFmB,kBAKpBA,GALoB,gCAQ3BX,QAAQY,MAAM,oDARa,yDAAH,sDAWfd,EAAkB,mCAAG,WAAMP,GAAN,kGAEPmB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAhB,EADA,4BAC2BiB,IAHpB,uBAEtBG,EAFsB,EAEtBA,KAFsB,kBAKvBA,GALuB,gCAQ9BX,QAAQY,MAAM,oDARgB,yDAAH,sDAYlBG,EAAe,mCAAG,WAAOC,EAAOC,GAAd,kGAEJP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,kBAC4BQ,EAD5B,iBAC0CC,IAHtC,uBAEnBN,EAFmB,EAEnBA,KAFmB,kBAKpBA,GALoB,gCAO3BX,QAAQY,MAAM,8CAPa,yDAAH,uD","sources":["components/ReviewsList/ReviewsList.styled.js","components/ReviewsList/ReviewsList.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-top: 15px;\n  margin-left: 15px;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nexport const Text = styled.p`\n  font-size: 14px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { List, Item, Text } from './ReviewsList.styled';\nimport { fetchDataByReviews } from 'services/api';\n\nconst ReviewsList = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    const getReviewsById = async () => {\n      try {\n        const { results } = await fetchDataByReviews(movieId);\n        setReviews(results);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        return;\n      }\n    };\n    getReviewsById();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews && reviews.length > 0 ? (\n        <List>\n          {reviews.map(({ author, content, id }) => {\n            return (\n              <Item key={id}>\n                <Text>Author: {author}</Text>\n                <Text>{content}</Text>\n              </Item>\n            );\n          })}\n        </List>\n      ) : (\n        <Text>We don't have any reviews for this movie.</Text>\n      )}\n    </>\n  );\n};\n\nexport default ReviewsList;\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = '1a4aff832e717c565fcddbbcd57e889d';\n\nexport const fetchTrendMovies = async () => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/trending/movie/week?api_key=${KEY}&page=1`\n    );\n    return data.results;\n  } catch (error) {\n    console.error('Something wrong! Can not get trends movies now.' + error);\n  }\n};\n\nexport const fetchMovieById = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${KEY}&page=1`\n    );\n    return data;\n  } catch (error) {\n    console.error(\n      'Something wrong! Can not get trends movies by ID now.' + error\n    );\n  }\n};\n\nexport const fetchDataByCast = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`\n    );\n    return data;\n  } catch (error) {\n    // throw error;\n    console.error('Something wrong! Can not search films by ID' + error);\n  }\n};\nexport const fetchDataByReviews = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`\n    );\n    return data;\n  } catch (error) {\n    // throw error;\n    console.error('Something wrong! Can not search films by ID' + error);\n  }\n};\n\nexport const fetchSearchData = async (query, page) => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${KEY}&query=${query}&page=${page}`\n    );\n    return data;\n  } catch (error) {\n    console.error('Something wrong! Can not search films' + error);\n  }\n};\n"],"names":["List","styled","Item","Text","movieId","useParams","useState","reviews","setReviews","useEffect","getReviewsById","fetchDataByReviews","results","console","log","length","map","author","content","id","BASE_URL","KEY","fetchTrendMovies","axios","data","error","fetchMovieById","fetchDataByCast","fetchSearchData","query","page"],"sourceRoot":""}