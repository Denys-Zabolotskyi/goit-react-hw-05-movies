{"version":3,"file":"static/js/126.5b5816da.chunk.js","mappings":"uRAEaA,EAAOC,EAAAA,GAAAA,GAAH,6HAQJC,EAAOD,EAAAA,GAAAA,GAAH,wFAMJE,EAAQF,EAAAA,GAAAA,IAAH,0DAKLG,EAAOH,EAAAA,GAAAA,EAAH,yF,SCgCjB,EAhDiB,WACf,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,gHAEOC,EAAAA,EAAAA,IAAgBP,GAFvB,gBAERQ,EAFQ,EAERA,KACRJ,EAAWI,GAHK,gDAKhBC,QAAQC,IAAR,MALgB,2GAAH,qDAUjBJ,GACD,GAAE,CAACN,KAGF,8BACGG,GAAWA,EAAQQ,OAAS,GAC3B,SAAChB,EAAD,UACGQ,EAAQS,KAAI,YAAqD,IAAlDC,EAAiD,EAAjDA,GAAIC,EAA6C,EAA7CA,cAAeC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAC5C,OACE,UAACnB,EAAD,YACE,SAACC,EAAD,CACEmB,IAAG,yCAAoCD,GACvCE,IAAKJ,EACLK,OAAO,SAET,4BACE,SAACpB,EAAD,UAEGe,KAEH,UAACf,EAAD,yBAAkBgB,UAXXF,EAed,OAGH,sFAIP,C,kMClDKO,EAAW,+BACXC,EAAM,mCAECC,EAAgB,mCAAG,+GAELC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,wCACsBC,EADtB,YAFK,uBAEpBG,EAFoB,EAEpBA,KAFoB,kBAKrBA,EAAKC,SALgB,gCAO5BhB,QAAQiB,MAAM,wDAPc,yDAAH,qDAWhBC,EAAc,mCAAG,WAAM3B,GAAN,kGAEHuB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACApB,EADA,oBACmBqB,EADnB,YAFG,uBAElBG,EAFkB,EAElBA,KAFkB,kBAKnBA,GALmB,gCAO1Bf,QAAQiB,MACN,8DARwB,yDAAH,sDAadnB,EAAe,mCAAG,WAAMP,GAAN,kGAEJuB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACApB,EADA,4BAC2BqB,IAHvB,uBAEnBG,EAFmB,EAEnBA,KAFmB,kBAKpBA,GALoB,gCAQ3Bf,QAAQiB,MAAM,oDARa,yDAAH,sDAWfE,EAAkB,mCAAG,WAAM5B,GAAN,kGAEPuB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACApB,EADA,4BAC2BqB,IAHpB,uBAEtBG,EAFsB,EAEtBA,KAFsB,kBAKvBA,GALuB,gCAQ9Bf,QAAQiB,MAAM,oDARgB,yDAAH,sDAYlBG,EAAe,mCAAG,WAAOC,EAAOC,GAAd,kGAEJR,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,kBAC4BS,EAD5B,iBAC0CC,IAHtC,uBAEnBP,EAFmB,EAEnBA,KAFmB,kBAKpBA,GALoB,gCAO3Bf,QAAQiB,MAAM,8CAPa,yDAAH,uD","sources":["components/CastList/CastList.styled.js","components/CastList/CastList.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-top: 15px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  /* flex-direction: column; */\n  gap: 5px;\n`;\n\nexport const Photo = styled.img`\n  height: 100px;\n  width: auto;\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 5px;\n  display: flex;\n  align-items: center;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchDataByCast } from 'services/api';\nimport { Item, List, Photo, Text } from './CastList.styled';\n\nconst CastList = () => {\n  const { movieId } = useParams();\n  const [credits, setCredits] = useState(null);\n\n  useEffect(() => {\n    const getCastById = async () => {\n      try {\n        const { cast } = await fetchDataByCast(movieId);\n        setCredits(cast);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        return;\n      }\n    };\n    getCastById();\n  }, [movieId]);\n\n  return (\n    <>\n      {credits && credits.length > 0 ? (\n        <List>\n          {credits.map(({ id, original_name, character, profile_path }) => {\n            return (\n              <Item key={id}>\n                <Photo\n                  src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n                  alt={original_name}\n                  height=\"100\"\n                />\n                <div>\n                  <Text>\n                    {/* <RxDotFilled /> */}\n                    {original_name}\n                  </Text>\n                  <Text>Character: {character}</Text>\n                </div>\n              </Item>\n            );\n          })}\n        </List>\n      ) : (\n        <p>We don't have any information about casts for this movie.</p>\n      )}\n    </>\n  );\n};\n\nexport default CastList;\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = '1a4aff832e717c565fcddbbcd57e889d';\n\nexport const fetchTrendMovies = async () => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/trending/movie/week?api_key=${KEY}&page=1`\n    );\n    return data.results;\n  } catch (error) {\n    console.error('Something wrong! Can not get trends movies now.' + error);\n  }\n};\n\nexport const fetchMovieById = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${KEY}&page=1`\n    );\n    return data;\n  } catch (error) {\n    console.error(\n      'Something wrong! Can not get trends movies by ID now.' + error\n    );\n  }\n};\n\nexport const fetchDataByCast = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`\n    );\n    return data;\n  } catch (error) {\n    // throw error;\n    console.error('Something wrong! Can not search films by ID' + error);\n  }\n};\nexport const fetchDataByReviews = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`\n    );\n    return data;\n  } catch (error) {\n    // throw error;\n    console.error('Something wrong! Can not search films by ID' + error);\n  }\n};\n\nexport const fetchSearchData = async (query, page) => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${KEY}&query=${query}&page=${page}`\n    );\n    return data;\n  } catch (error) {\n    console.error('Something wrong! Can not search films' + error);\n  }\n};\n"],"names":["List","styled","Item","Photo","Text","movieId","useParams","useState","credits","setCredits","useEffect","getCastById","fetchDataByCast","cast","console","log","length","map","id","original_name","character","profile_path","src","alt","height","BASE_URL","KEY","fetchTrendMovies","axios","data","results","error","fetchMovieById","fetchDataByReviews","fetchSearchData","query","page"],"sourceRoot":""}