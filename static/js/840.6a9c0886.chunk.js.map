{"version":3,"file":"static/js/840.6a9c0886.chunk.js","mappings":"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","sources":["pages/MovieDetails.styled.js","pages/MovieDetails.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieBox = styled.section`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  border-bottom: 1px solid black;\n  padding-bottom: 10px;\n`;\nexport const GoBackLink = styled(NavLink)`\n  display: flex;\n  font-size: 12px;\n  width: 80px;\n  height: 30px;\n  align-items: center;\n  justify-content: center;\n  background-color: transparent;\n  text-transform: uppercase;\n  font-weight: 700;\n  color: black;\n  border: black 1px solid;\n  margin-bottom: 20px;\n  :hover {\n    color: red;\n  }\n`;\nexport const MovieInfoBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`;\n\nexport const PosterImage = styled.img`\n  display: block;\n  margin-right: 20px;\n`;\nexport const MovieInfo = styled.div`\n  flex-grow: 2;\n  justify-content: flex;\n`;\nexport const MainTitle = styled.h2`\n  font-size: 36px;\n  text-transform: uppercase;\n  margin-bottom: 10px;\n`;\n\nexport const SecondTitle = styled.h3`\n  font-size: 30px;\n`;\nexport const TitleInfoText = styled.p`\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const AdditionalInfoLink = styled(NavLink)`\n  color: black;\n  font-size: 26px;\n  &:hover,\n  &:focus {\n    color: red;\n    font-weight: 700;\n  }\n`;\n","import { useParams, Outlet } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { fetchMovieById } from 'services/api';\n\nimport {\n  AdditionalInfoLink,\n  GoBackLink,\n  MainTitle,\n  MovieBox,\n  MovieInfo,\n  MovieInfoBox,\n  PosterImage,\n  SecondTitle,\n  TitleInfoText,\n} from './MovieDetails.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [moviInfo, setmoviInfo] = useState(null);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n  const posterPath = `https://www.themoviedb.org/t/p/w500${moviInfo?.poster_path}`;\n  const releaseYear =\n    new Date(Date.parse(moviInfo?.release_date)).getFullYear() || '';\n  const userScore = Math.round(moviInfo?.vote_average * 10);\n  const genres = moviInfo?.genres.map(({ name }) => name).join(', ');\n\n  useEffect(() => {\n    const getMovieById = async () => {\n      try {\n        const movie = await fetchMovieById(movieId);\n        setmoviInfo(movie);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        return;\n      }\n    };\n    getMovieById();\n  }, [movieId]);\n\n  return (\n    <MovieBox>\n      <GoBackLink to={backLinkHref}>Go Back</GoBackLink>\n      {moviInfo && (\n        <MovieInfoBox>\n          <PosterImage src={posterPath} alt={moviInfo.title} />\n          <MovieInfo>\n            <MainTitle>\n              {moviInfo.title} ({releaseYear})\n            </MainTitle>\n            <TitleInfoText>User Score: {userScore}%</TitleInfoText>\n            <SecondTitle>Overview</SecondTitle>\n            <TitleInfoText>{moviInfo.overview}</TitleInfoText>\n            <SecondTitle>Genres</SecondTitle>\n            <TitleInfoText>{genres}</TitleInfoText>\n          </MovieInfo>\n        </MovieInfoBox>\n      )}\n\n      <div>\n        <SecondTitle>Additional info</SecondTitle>\n        <ul>\n          <li>\n            <AdditionalInfoLink to=\"cast\">Cast</AdditionalInfoLink>\n          </li>\n          <li>\n            <AdditionalInfoLink to=\"reviews\">Review</AdditionalInfoLink>\n          </li>\n        </ul>\n      </div>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </MovieBox>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = '1a4aff832e717c565fcddbbcd57e889d';\n\nexport const fetchTrendMovies = async () => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/trending/movie/week?api_key=${KEY}&page=1`\n    );\n    return data.results;\n  } catch (error) {\n    console.error('Something wrong! Can not get trends movies now.' + error);\n  }\n};\n\nexport const fetchMovieById = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${KEY}&page=1`\n    );\n    return data;\n  } catch (error) {\n    console.error(\n      'Something wrong! Can not get trends movies by ID now.' + error\n    );\n  }\n};\n\nexport const fetchDataByCast = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`\n    );\n    return data;\n  } catch (error) {\n    // throw error;\n    console.error('Something wrong! Can not search films by ID' + error);\n  }\n};\nexport const fetchDataByReviews = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`\n    );\n    return data;\n  } catch (error) {\n    // throw error;\n    console.error('Something wrong! Can not search films by ID' + error);\n  }\n};\n\nexport const fetchSearchData = async (query, page) => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${KEY}&query=${query}&page=${page}`\n    );\n    return data;\n  } catch (error) {\n    console.error('Something wrong! Can not search films' + error);\n  }\n};\n"],"names":["MovieBox","styled","GoBackLink","NavLink","MovieInfoBox","PosterImage","MovieInfo","MainTitle","SecondTitle","TitleInfoText","AdditionalInfoLink","movieId","useParams","useState","moviInfo","setmoviInfo","backLinkHref","useLocation","state","from","posterPath","poster_path","releaseYear","Date","parse","release_date","getFullYear","userScore","Math","round","vote_average","genres","map","name","join","useEffect","getMovieById","fetchMovieById","movie","console","log","to","src","alt","title","overview","Suspense","fallback","Loader","BASE_URL","KEY","fetchTrendMovies","axios","data","results","error","fetchDataByCast","fetchDataByReviews","fetchSearchData","query","page"],"sourceRoot":""}