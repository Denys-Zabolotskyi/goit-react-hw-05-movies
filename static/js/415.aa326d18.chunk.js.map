{"version":3,"file":"static/js/415.aa326d18.chunk.js","mappings":"wNAGaA,EAAOC,EAAAA,GAAAA,GAAH,sGAMJC,EAAYD,EAAAA,GAAAA,GAAH,gIAOTE,GAAOF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,iH,SCZJI,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACR,EAAD,UACGM,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,SAACT,EAAD,WACE,SAACC,EAAD,CAAMS,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA1C,SACGI,KAFWD,EADN,KASjB,C,yHCkBD,UA9Ba,WACX,OAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOT,EAAP,KAAeU,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAeA,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,8GAEMC,EAAAA,EAAAA,MAFN,OAEbC,EAFa,OAGnBN,EAAUM,GAHS,gDAKnBC,QAAQC,IAAR,MALmB,yBAOnBN,GAAa,GAPM,4EAAH,qDAWpBE,GACD,GAAE,KAED,gCACE,yCAECH,GAA+B,IAAlBX,EAAOmB,QACnB,SAAC,IAAD,KAEA,SAAC,IAAD,CAAWnB,OAAQA,MAI1B,C,kMChCKoB,EAAW,+BACXC,EAAM,mCAECN,EAAgB,mCAAG,+GAELO,EAAAA,EAAAA,IAAA,UAClBF,EADkB,wCACsBC,EADtB,YAFK,uBAEpBE,EAFoB,EAEpBA,KAFoB,kBAKrBA,EAAKC,SALgB,gCAO5BP,QAAQQ,MAAM,wDAPc,yDAAH,qDAWhBC,EAAc,mCAAG,WAAMC,GAAN,kGAEHL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAO,EADA,oBACmBN,EADnB,YAFG,uBAElBE,EAFkB,EAElBA,KAFkB,kBAKnBA,GALmB,gCAO1BN,QAAQQ,MACN,8DARwB,yDAAH,sDAadG,EAAe,mCAAG,WAAMD,GAAN,kGAEJL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAO,EADA,4BAC2BN,IAHvB,uBAEnBE,EAFmB,EAEnBA,KAFmB,kBAKpBA,GALoB,gCAQ3BN,QAAQQ,MAAM,oDARa,yDAAH,sDAWfI,EAAkB,mCAAG,WAAMF,GAAN,kGAEPL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAO,EADA,4BAC2BN,IAHpB,uBAEtBE,EAFsB,EAEtBA,KAFsB,kBAKvBA,GALuB,gCAQ9BN,QAAQQ,MAAM,oDARgB,yDAAH,sDAYlBK,EAAe,mCAAG,WAAOC,EAAOC,GAAd,kGAEJV,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACeC,EADf,kBAC4BU,EAD5B,iBAC0CC,IAHtC,uBAEnBT,EAFmB,EAEnBA,KAFmB,kBAKpBA,GALoB,gCAO3BN,QAAQQ,MAAM,8CAPa,yDAAH,uD","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Home.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  /* display: flex; */\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nexport const MovieItem = styled.li`\n  flex-basis: calc((100% - 40px) / 2);\n  font-size: 26px;\n  font-weight: 500;\n  text-align: center;\n`;\n\nexport const Link = styled(NavLink)`\n  color: black;\n\n  &:hover,\n  &:focus {\n    color: red;\n    font-weight: 700;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { List, MovieItem, Link } from './MovieList.styled';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {movies.map(({ id, title }) => (\n        <MovieItem key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </Link>\n        </MovieItem>\n      ))}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { fetchTrendMovies } from 'services/api';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const getTrendMovies = async () => {\n      try {\n        const moviesList = await fetchTrendMovies();\n        setMovies(moviesList);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getTrendMovies();\n  }, []);\n  return (\n    <section>\n      <h1>Trandy Today</h1>\n\n      {isLoading && movies.length === 0 ? (\n        <Loader />\n      ) : (\n        <MovieList movies={movies} />\n      )}\n    </section>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = '1a4aff832e717c565fcddbbcd57e889d';\n\nexport const fetchTrendMovies = async () => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/trending/movie/week?api_key=${KEY}&page=1`\n    );\n    return data.results;\n  } catch (error) {\n    console.error('Something wrong! Can not get trends movies now.' + error);\n  }\n};\n\nexport const fetchMovieById = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${KEY}&page=1`\n    );\n    return data;\n  } catch (error) {\n    console.error(\n      'Something wrong! Can not get trends movies by ID now.' + error\n    );\n  }\n};\n\nexport const fetchDataByCast = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`\n    );\n    return data;\n  } catch (error) {\n    // throw error;\n    console.error('Something wrong! Can not search films by ID' + error);\n  }\n};\nexport const fetchDataByReviews = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`\n    );\n    return data;\n  } catch (error) {\n    // throw error;\n    console.error('Something wrong! Can not search films by ID' + error);\n  }\n};\n\nexport const fetchSearchData = async (query, page) => {\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${KEY}&query=${query}&page=${page}`\n    );\n    return data;\n  } catch (error) {\n    console.error('Something wrong! Can not search films' + error);\n  }\n};\n"],"names":["List","styled","MovieItem","Link","NavLink","MovieList","movies","location","useLocation","map","id","title","to","state","from","useState","setMovies","isLoading","setIsLoading","useEffect","getTrendMovies","fetchTrendMovies","moviesList","console","log","length","BASE_URL","KEY","axios","data","results","error","fetchMovieById","movieId","fetchDataByCast","fetchDataByReviews","fetchSearchData","query","page"],"sourceRoot":""}